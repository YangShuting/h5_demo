// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$icon-tips-name: 'icon_tips';
$icon-tips-x: 0px;
$icon-tips-y: 0px;
$icon-tips-offset-x: 0px;
$icon-tips-offset-y: 0px;
$icon-tips-width: 41px;
$icon-tips-height: 34px;
$icon-tips-total-width: 118px;
$icon-tips-total-height: 460px;
$icon-tips-image: '../images/sprite.png';
$icon-tips: (0px, 0px, 0px, 0px, 41px, 34px, 118px, 460px, '../images/sprite.png', 'icon_tips', );
$icon-mail-name: 'icon_mail';
$icon-mail-x: 0px;
$icon-mail-y: 34px;
$icon-mail-offset-x: 0px;
$icon-mail-offset-y: -34px;
$icon-mail-width: 90px;
$icon-mail-height: 54px;
$icon-mail-total-width: 118px;
$icon-mail-total-height: 460px;
$icon-mail-image: '../images/sprite.png';
$icon-mail: (0px, 34px, 0px, -34px, 90px, 54px, 118px, 460px, '../images/sprite.png', 'icon_mail', );
$icon-person-info3-name: 'icon_person_info3';
$icon-person-info3-x: 0px;
$icon-person-info3-y: 88px;
$icon-person-info3-offset-x: 0px;
$icon-person-info3-offset-y: -88px;
$icon-person-info3-width: 74px;
$icon-person-info3-height: 84px;
$icon-person-info3-total-width: 118px;
$icon-person-info3-total-height: 460px;
$icon-person-info3-image: '../images/sprite.png';
$icon-person-info3: (0px, 88px, 0px, -88px, 74px, 84px, 118px, 460px, '../images/sprite.png', 'icon_person_info3', );
$icon-edu-name: 'icon_edu';
$icon-edu-x: 0px;
$icon-edu-y: 172px;
$icon-edu-offset-x: 0px;
$icon-edu-offset-y: -172px;
$icon-edu-width: 118px;
$icon-edu-height: 87px;
$icon-edu-total-width: 118px;
$icon-edu-total-height: 460px;
$icon-edu-image: '../images/sprite.png';
$icon-edu: (0px, 172px, 0px, -172px, 118px, 87px, 118px, 460px, '../images/sprite.png', 'icon_edu', );
$icon-thrown-name: 'icon_thrown';
$icon-thrown-x: 0px;
$icon-thrown-y: 259px;
$icon-thrown-offset-x: 0px;
$icon-thrown-offset-y: -259px;
$icon-thrown-width: 97px;
$icon-thrown-height: 99px;
$icon-thrown-total-width: 118px;
$icon-thrown-total-height: 460px;
$icon-thrown-image: '../images/sprite.png';
$icon-thrown: (0px, 259px, 0px, -259px, 97px, 99px, 118px, 460px, '../images/sprite.png', 'icon_thrown', );
$icon-money-name: 'icon_money';
$icon-money-x: 0px;
$icon-money-y: 358px;
$icon-money-offset-x: 0px;
$icon-money-offset-y: -358px;
$icon-money-width: 102px;
$icon-money-height: 102px;
$icon-money-total-width: 118px;
$icon-money-total-height: 460px;
$icon-money-image: '../images/sprite.png';
$icon-money: (0px, 358px, 0px, -358px, 102px, 102px, 118px, 460px, '../images/sprite.png', 'icon_money', );
$spritesheet-width: 118px;
$spritesheet-height: 460px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($icon-tips, $icon-mail, $icon-person-info3, $icon-edu, $icon-thrown, $icon-money, );
$spritesheet: (118px, 460px, '../images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
